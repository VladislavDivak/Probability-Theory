### Excersize 1 ###
"""
Даны значения величины заработной платы заемщиков банка (zp)
и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Произвести вычисления как в пункте 2, но с вычислением intercept.
Учесть, что изменение коэффициентов должно производиться
на каждом шаге одновременно (то есть изменение одного коэффициента
не должно влиять на изменение другого во время одной итерации).
"""
import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

num = len(zp)
zp = zp.reshape(len(zp),1)
ks = ks.reshape(len(ks),1)

def mse_(B0, B1,y=ks,X=zp,n=num):
    return np.sum((B0+B1*X-y)**2)/n

alpha = 0.00001
beta = 0.01
B1 = 1
B0 = 100
for i in range (3001):
    B0 -=beta*(2/num)*np.sum((B0+B1*zp-ks))
    B1 -=alpha*(2/num)*np.sum((B0+B1*zp-ks)*zp)
    if i%300 == 0:
        print(f'Iteration: {i}, B0 = {B0}, B1={B1}, MSE = {mse_(B0,B1)}')
"""
Iteration: 0, B0 = 110.17, B1=2.1238772399999997, MSE = 155071.85799795671
Iteration: 300, B0 = 372.11683260233013, B1=3.1578523130617078, MSE = 7788.285688250423
Iteration: 600, B0 = 427.5606282262702, B1=2.7444401688902786, MSE = 6540.49020066072
Iteration: 900, B0 = 440.34563826618717, B1=2.6491097833281994, MSE = 6474.140395841203
Iteration: 1200, B0 = 443.2937856626868, B1=2.6271271624992227, MSE = 6470.612336440949
Iteration: 1500, B0 = 443.9736109459173, B1=2.622058100671123, MSE = 6470.424736746186
Iteration: 1800, B0 = 444.1303746193576, B1=2.6208892051141754, MSE = 6470.414761391043
Iteration: 2100, B0 = 444.16652339157406, B1=2.6206196647397655, MSE = 6470.414230965289
Iteration: 2400, B0 = 444.17485908379217, B1=2.6205575103299847, MSE = 6470.41420276063
Iteration: 2700, B0 = 444.1767812449192, B1=2.62054317789217, MSE = 6470.414201260883
Iteration: 3000, B0 = 444.1772244838612, B1=2.620539872917117, MSE = 6470.41420118114
"""
